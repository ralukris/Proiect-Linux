#!/bin/bash

# Culori pentru afișare
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fișierul CSV pentru utilizatori
USER_DB="users.csv"

# Creăm fișierul CSV dacă nu există
if [ ! -f "$USER_DB" ]; then
    touch "$USER_DB"
    echo "ID,Username,Email,Password,HomeDirectory,LastLogin" > "$USER_DB"
fi

# Array pentru utilizatorii autentificați
declare -a logged_in_users

# Funcție pentru validarea unui email
validate_email() {
    [[ "$1" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]] && return 0 || return 1
}

# Funcție pentru afișarea unui mesaj colorat
print_colored() {
    color=$1
    message=$2
    echo -e "${color}${message}${NC}"
}

# Înregistrare utilizator nou
register_user() {
    read -p "Utilizator: " username
    if grep -q "^.*,$username,.*$" "$USER_DB"; then
        print_colored "$RED" "Utilizatorul '$username' există deja."
        return
    fi

    read -p "Email: " email
    until validate_email "$email"; do
        print_colored "$RED" "Email invalid. Reîncercați:"
        read -p "Email: " email
done

    read -s -p "Parolă: " password
    echo
    read -s -p "Confirmați parola: " password_confirm
    echo

    if [ "$password" != "$password_confirm" ]; then
        print_colored "$RED" "Parolele nu se potrivesc. Înregistrarea nu se poate efectua."
        return
    fi

    last_login=$(date '+%Y-%m-%d %H:%M:%S')
    user_id=$RANDOM
    home_directory="$(pwd)/home/$username"
    echo "$user_id,$username,$email,$password,$home_directory,$last_login" >> "$USER_DB"
    mkdir -p "$home_directory"
    print_colored "$GREEN" "Utilizatorul '$username' a fost înregistrat."
}

# Autentificare utilizator
login_user() {
    read -p "Utilizator: " username
    user_record=$(grep "^.*,$username,.*$" "$USER_DB")

    if [ -z "$user_record" ]; then
        print_colored "$RED" "Utilizatorul '$username' nu există."
        return
    fi

    IFS=',' read -r -a user_fields <<< "$user_record"
    echo "user_fields: ${user_fields[@]}"
    read -s -p "Parolă: " password
    echo

    if [ "$password" != "${user_fields[3]}" ]; then
        print_colored "$RED" "Parolă incorectă."
        return
    fi
 # Navigăm către directorul "home" al utilizatorului
    cd "${user_fields[4]}" || { print_colored "$RED" "Nu se poate naviga către directorul home."; return; }

    # Actualizăm câmpul "last_login" în registru
    last_login=$(date '+%Y-%m-%d %H:%M:%S')
    sed -i "s/^${user_fields[0]},${user_fields[1]},${user_fields[2]},${user_fields[3]},${user_fields[4]},.*/${user_fields[0]},${user_fields[1]},${user_fields[2]},${user_fields[3]},${user_fields[4]},$last_login\,/" "$USER_DB"

    # Adăugăm utilizatorul în array-ul logged_in_users
    logged_in_users+=("$username")

    print_colored "$GREEN" "Autentificare reușită pentru utilizatorul '$username'."
}

# Deautentificare utilizator
logout_user() {
    read -p "Introduceti numele de utilizator: " username

    # Verificăm dacă utilizatorul este autentificat
    for i in "${!logged_in_users[@]}"; do
        if [ "${logged_in_users[$i]}" == "$username" ]; then
            unset 'logged_in_users[i]'
            print_colored "$GREEN" "Utilizatorul '$username' a fost deautentificat."
            return
        fi
    done

    print_colored "$RED" "Utilizatorul '$username' nu este autentificat."
}

# Generare raport pentru utilizator
generate_report() {
    read -p "Introduceti numele de utilizator: " username

    # Căutăm utilizatorul în registru
    user_record=$(grep "^.*,$username,.*$" "$USER_DB")

    if [ -z "$user_record" ]; then
        print_colored "$RED" "Utilizatorul '$username' nu există."
        return
    fi

    IFS=',' read -r -a user_fields <<< "$user_record"
    home_directory="${user_fields[4]}"
    last_login="${user_fields[5]}" # Obținem valoarea câmpului last_login

    # Verificăm dacă directorul home există
    if [ ! -d "$home_directory" ]; then
        print_colored "$RED" "Directorul home pentru utilizatorul '$username' nu există."
        return
    fi

    report_file="$home_directory/report.txt"
    num_files=$(find "$home_directory" -type f | wc -l)
    num_dirs=$(find "$home_directory" -type d | grep -v "$home_directory" | wc -l)
    total_size=$(du -sh "$home_directory" | cut -f1)

    echo "=== Raport pentru utilizatorul '$username' ===" > "$report_file"
    echo "" >> "$report_file"
    echo "Număr de fișiere: $num_files" >> "$report_file"
    echo "Număr de directoare (exclusiv directorul home): $num_dirs" >> "$report_file"
    echo "Dimensiunea totală ocupată: $total_size" >> "$report_file"
    echo "Ultima autentificare: $last_login" >> "$report_file" # Adăugăm câmpul last_login în raport
    echo "" >> "$report_file"
    echo "=== Detalii fișiere ===" >> "$report_file"
    find "$home_directory" -type f -printf "- %p (%s bytes)\n" >> "$report_file"
    echo "" >> "$report_file"
    echo "=== Detalii directoare ===" >> "$report_file"
    find "$home_directory" -type d -printf "- %p\n" | grep -v "$home_directory" >> "$report_file"

    print_colored "$GREEN" "Raportul pentru utilizatorul '$username' a fost generat în '$$report_file'."
}

# Meniu principal
while true; do
    echo "========== Meniu Principal =========="
    echo "1. Înregistrare utilizator"
    echo "2. Autentificare utilizator"
  echo "3. Deautentificare utilizator"
    echo "4. Generează raport pentru utilizator"
    echo "5. Ieșire"
    read -p "Selectați o opțiune: " option

    case $option in
        1) register_user ;;
        2) login_user ;;
        3) logout_user ;;
        4) generate_report ;;
        5) print_colored "$BLUE" "La revedere!"; break ;;
        *) print_colored "$RED" "Opțiune invalidă." ;;
    esac
    echo
done



